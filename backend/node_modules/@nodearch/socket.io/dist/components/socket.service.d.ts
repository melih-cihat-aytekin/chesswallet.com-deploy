/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { AppContext, Logger } from '@nodearch/core';
import { SocketConfig } from './socket.config.js';
import * as IO from 'socket.io';
import http from 'http';
import https from 'https';
import { ParserService } from './parser.service.js';
import { RegistryService } from './registry.service.js';
export declare class SocketService {
    private logger;
    private socketConfig;
    private io;
    private server;
    private parser;
    private registryService;
    private appContext;
    constructor(logger: Logger, socketConfig: SocketConfig, parser: ParserService, registryService: RegistryService, appContext: AppContext);
    start(): Promise<void>;
    private initHttpServer;
    private startHttpServer;
    private registerAdapters;
    private protectDefaultNamespace;
    private register;
    getServer(): IO.Server;
    getHttpServer(): http.Server<typeof http.IncomingMessage, typeof http.ServerResponse> | https.Server<typeof http.IncomingMessage, typeof http.ServerResponse>;
}
//# sourceMappingURL=socket.service.d.ts.map