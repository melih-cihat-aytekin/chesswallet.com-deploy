/// <reference types="node" resolution-mode="require"/>
import { Stats } from 'node:fs';
import { IFile, IFileInfo } from './interfaces.js';
export declare class FileLoader {
    static loadFiles(filesInfo: IFileInfo[]): Promise<IFile[]>;
    static filterFiles(filesInfo: IFileInfo[], include: (RegExp | string)[], exclude: (RegExp | string)[]): IFileInfo[];
    static getDirContent(url: URL): Promise<IFileInfo[]>;
    static getFilesList(dirUrl: URL, depth?: number): Promise<IFileInfo[]>;
    static getFileNameMatcher(exp: string): RegExp;
    static isFileNameMatching(fileName: string, include: (RegExp | string)[], exclude: (RegExp | string)[]): boolean;
    static importModule<T = any>(url: URL): Promise<T>;
    static importJSON(url: URL, jsonComments?: boolean): Promise<any>;
    static getPathInfo(url: URL): Promise<Stats | undefined>;
}
//# sourceMappingURL=file-loader.d.ts.map