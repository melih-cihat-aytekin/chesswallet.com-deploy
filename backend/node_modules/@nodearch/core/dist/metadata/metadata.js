import 'reflect-metadata';
export class MetadataInfo {
    static getClassMetadata(key, target) {
        return Reflect.getMetadata(MetadataInfo.PREFIX + key, target);
    }
    static getMethodMetadata(key, target, propertyKey) {
        return Reflect.getMetadata(MetadataInfo.PREFIX + key, target, propertyKey);
    }
    static setClassMetadata(key, target, value) {
        Reflect.defineMetadata(MetadataInfo.PREFIX + key, value, target);
    }
    static setMethodMetadata(key, target, propertyKey, value) {
        Reflect.defineMetadata(MetadataInfo.PREFIX + key, value, target, propertyKey);
    }
    static getClassParams(target) {
        return Reflect.getMetadata('design:paramtypes', target) || [];
    }
    static getMethodParams(target, propertyKey) {
        return Reflect.getMetadata('design:paramtypes', target, propertyKey) || [];
    }
}
MetadataInfo.PREFIX = '@nodearch/core/';
//# sourceMappingURL=metadata.js.map