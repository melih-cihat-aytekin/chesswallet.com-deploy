import { ComponentFactory } from '../component-factory.js';
import { CoreDecorator } from '../enums.js';
export function Use(component, options) {
    return ComponentFactory.classMethodDecorator({
        id: CoreDecorator.USE,
        fn: (target, propKey) => {
            if (!ComponentFactory.isComponent(component)) {
                const controllerMethodName = `(${target.constructor.name}${propKey ? `.${propKey.toString()}` : ''})`;
                throw new Error(`Calling @Use(${component.name}) on ${controllerMethodName}. ${component.name} is not a component.`);
            }
            return {
                component,
                options,
            };
        },
        dependencies: [component]
    });
}
//# sourceMappingURL=use.decorator.js.map