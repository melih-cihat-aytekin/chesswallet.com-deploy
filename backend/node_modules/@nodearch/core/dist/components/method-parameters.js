import { DecoratorType } from './enums.js';
export class MethodParameters {
    static getArguments(options) {
        const params = [];
        const decoratorsParams = options.decorators
            .map(deco => {
            const paramDecorators = options.component.getDecorators({
                id: deco.id,
                placement: [DecoratorType.PARAMETER],
                method: options.method
            });
            return paramDecorators.map(paramDeco => {
                let arg;
                if (typeof deco.arg === 'function') {
                    arg = deco.arg(paramDeco.data);
                }
                else {
                    arg = deco.arg;
                }
                return {
                    index: paramDeco.paramIndex,
                    arg
                };
            });
        })
            .flat()
            .sort((a, b) => a.index - b.index);
        if (!decoratorsParams.length)
            return [];
        const lastParamIndex = decoratorsParams[decoratorsParams.length - 1].index;
        for (let i = 0; i <= lastParamIndex; i++) {
            const decoratorParam = decoratorsParams.find(decoParams => decoParams.index === i);
            if (decoratorParam) {
                params.push(decoratorParam);
            }
            else {
                params.push(null);
            }
        }
        return params.map(param => param?.arg);
    }
}
//# sourceMappingURL=method-parameters.js.map