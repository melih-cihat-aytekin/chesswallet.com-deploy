import { ConfigResolve } from './config-resolve.js';
export class ConfigManager {
    constructor(externalConfig) {
        this.externalConfig = externalConfig;
        if (this.externalConfig && (typeof this.externalConfig !== 'object' || !Object.keys(this.externalConfig).length)) {
            throw new Error(`External Configurations can only be non-empty object - option: components.config`);
        }
    }
    env(envConfig) {
        return ConfigResolve.env(envConfig, ConfigManager.currentEnv, this.externalConfig);
    }
    static env(envConfig) {
        return ConfigResolve.env(envConfig, ConfigManager.currentEnv);
    }
}
ConfigManager.currentEnv = process.env.NODE_ENV || 'development';
//# sourceMappingURL=config-manager.js.map