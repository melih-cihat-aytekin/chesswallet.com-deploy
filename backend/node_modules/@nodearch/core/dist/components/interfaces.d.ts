import { Container } from '../container/container.js';
import { ClassConstructor } from '../utils/types.js';
import { ComponentScope, DecoratorType } from './enums.js';
import { ComponentInfo } from './component-info.js';
export interface IComponentsOptions {
    defaultScope?: ComponentScope;
}
export interface IComponentDecoratorInfo<T = any> extends IComponentDecorator<T> {
    componentInfo: ComponentInfo;
}
export interface IParameterDecoratorInfo<T = any> extends IParameterDecorator<T> {
    componentInfo: ComponentInfo;
}
export type IComponentDecorator<T = any> = {
    id: string;
    type: DecoratorType;
    method?: string;
    paramIndex?: number;
    data: T;
    dependencies: IDecoratorDependency[];
};
export type IParameterDecorator<T = any> = IComponentDecorator<T> & {
    type: DecoratorType.PARAMETER;
    method: string;
    paramIndex: number;
};
export interface IDecoratorDependency {
    key: string;
    component: ClassConstructor;
}
export interface IComponentHandler {
    register(componentInfo: ComponentInfo): void;
    registerExtension?(componentInfo: ComponentInfo, extContainer: Container): void;
}
export interface IComponentRegistration<T = any> {
    id: string;
    options?: IComponentOptions;
    data?: T;
    dependencies?: IDecoratorDependency[];
}
export interface IGetComponentsOptions {
    id?: string;
    decoratorIds?: string[];
}
export interface IComponentOptions {
    scope?: ComponentScope;
    namespace?: string;
    export?: boolean;
}
export interface IGetDecoratorsOptions {
    id?: string;
    method?: string;
    useId?: string;
    placement?: DecoratorType[];
}
export interface IBinderBindOptions {
    container: Container;
    componentClass: ClassConstructor;
    id: string;
    scope?: ComponentScope;
    namespace?: string;
}
export interface IGetMethodParameters {
    component: ComponentInfo;
    method: string;
    decorators: {
        id: string;
        arg: ((data?: any) => any) | object | string | number | boolean | null | undefined;
    }[];
}
//# sourceMappingURL=interfaces.d.ts.map